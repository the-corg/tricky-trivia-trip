<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource SemiTransparent}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>
    
    <!-- Title bar styles -->
    <Style TargetType="Button" x:Key="TitleBarButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="{StaticResource TitleBarHeight}"/>
        <Setter Property="Height" Value="{StaticResource TitleBarHeight}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource 5_MediumLight}"/>
                <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource 3_MediumDark}"/>
                <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Main menu styles -->
    <Style TargetType="TextBlock" x:Key="MenuTextPrimary">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="MenuTextSecondary" BasedOn="{StaticResource MenuTextPrimary}">
        <Setter Property="Foreground" Value="{StaticResource 7_VeryLight}"/>
        <Setter Property="FontSize" Value="{StaticResource MenuSecondaryFontSize}"/>
    </Style>

    <Style TargetType="Button" x:Key="MenuButton">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding Foreground}" CornerRadius="12">
                        <TextBlock Focusable="False" Text="{TemplateBinding Content}" TextWrapping="Wrap" TextAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource 6_Light}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PaleOlive}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Game styles -->
    <Style TargetType="TextBlock" x:Key="GameQuestionText" BasedOn="{StaticResource MenuTextPrimary}">
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="{StaticResource GameQuestionFontSize}"/>
        <Setter Property="Margin" Value="0 0 0 6"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="GameTextSecondary" BasedOn="{StaticResource GameQuestionText}">
        <Setter Property="Foreground" Value="{StaticResource 6_Light}"/>
        <Setter Property="FontSize" Value="{StaticResource GameSecondaryFontSize}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="NextQuestionButton" BasedOn="{StaticResource MenuButton}">
        <Setter Property="Margin" Value="0 6"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Listbox styles -->
    <Style TargetType="ListBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="{StaticResource GamePrimaryFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <!-- When SelectionMode is Multiple, moving to another item doesn't select it. Spacebar toggles selection -->
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border" BorderThickness="0" Background="Transparent">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 6"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" 
                            Margin="{TemplateBinding Margin}" CornerRadius="12">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding LeftCorrectnessDecorator}" TextAlignment="Right"/>
                            <TextBlock Grid.Column="1" Text="{Binding Text}" TextAlignment="Center"/>
                            <TextBlock Grid.Column="2" Text="{Binding RightCorrectnessDecorator}" TextAlignment="Left"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="3"/>
                            <Setter TargetName="ItemBorder" Property="Margin" Value="0 3"/> 
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=ListBox}}" Value="False"/>
                                <Condition Binding="{Binding IsCorrect}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource WrongAnswer}"/>
                            <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource WrongAnswer}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding IsCorrect}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource CorrectAnswer}"/>
                            <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource CorrectAnswer}"/>
                        </MultiDataTrigger>
                        <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar">
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

<!-- TODO: Remove this
    <Style TargetType="Button" x:Key="GameAnswerButton" BasedOn="{StaticResource MenuButton}">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="{StaticResource GamePrimaryFontSize}"/>
        <Setter Property="Margin" Value="0 6"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Margin" Value="0 3"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding IsCorrect}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource WrongAnswer}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding IsCorrect}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource CorrectAnswer}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
-->

    <!-- Tab Control with a button in the header -->
    <Style TargetType="TabItem">
        <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border x:Name="Border" Margin="0 0 -8 0" Background="{StaticResource 5_MediumLight}" BorderBrush="{StaticResource 2_Dark}" BorderThickness="3 3 3 0" CornerRadius="12 12 0 0" >
                            <ContentPresenter SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="8 2 8 2" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource 3_MediumDark}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource 3_MediumDark}" />
                            <Setter Property="Panel.ZIndex" Value="20" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="10" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource 2_Dark}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource 3_MediumDark}" />
                            <Setter Property="Foreground" Value="{StaticResource 7_VeryLight}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2 2 2 0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="TabControlBackButton" BasedOn="{StaticResource MenuButton}">
        <Setter Property="Margin" Value="8 0"/>
    </Style>
    <Style x:Key="TabControlWithButton" TargetType="TabControl">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource GreenGradient}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" Background="{StaticResource 2_Dark}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TabPanel Margin="5 1 4 0" IsItemsHost="true" KeyboardNavigation.TabIndex="1" Background="{StaticResource 2_Dark}"/>
                            <Button Grid.Column="1" Command="{Binding DataContext.BackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                    Style="{StaticResource TabControlBackButton}" Content="{TemplateBinding Tag}"/>
                        </Grid>
                        <Border Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" 
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" SnapsToDevicePixels="True" 
                                              ContentSource="SelectedContent" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
