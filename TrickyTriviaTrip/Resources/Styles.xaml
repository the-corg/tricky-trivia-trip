<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource SemiTransparent}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <!-- Title bar styles -->
    <Style TargetType="Button" x:Key="TitleBarButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="{StaticResource TitleBarHeight}"/>
        <Setter Property="Height" Value="{StaticResource TitleBarHeight}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource 5_MediumLight}"/>
                <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource 3_MediumDark}"/>
                <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Main menu styles -->
    <Style TargetType="TextBlock" x:Key="MenuTextPrimary">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="MenuTextSecondary" BasedOn="{StaticResource MenuTextPrimary}">
        <Setter Property="Foreground" Value="{StaticResource 7_VeryLight}"/>
        <Setter Property="FontSize" Value="{StaticResource MenuSecondaryFontSize}"/>
        <Setter Property="Margin" Value="0 4"/>
    </Style>

    <Style TargetType="Button" x:Key="MenuButton">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding Foreground}" CornerRadius="20">
                        <TextBlock Focusable="False" Text="{TemplateBinding Content}" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" TextAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource 6_Light}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PaleOlive}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Player name edit TextBox style -->

    <Style TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Gold}"/>
        <Setter Property="Foreground" Value="{StaticResource 5_MediumLight}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="{StaticResource Gold}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MaxLength" Value="255"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!-- Player selection ComboBox -->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
        <Grid x:Name="templateRoot">
            <Popup x:Name="PART_Popup" AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                   Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border x:Name="dropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentControl x:Name="contentPresenter" FontWeight="SemiBold" 
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="toggleButton" Value="true">
                <Setter Property="Foreground" TargetName="contentPresenter" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" SourceName="toggleButton" Value="True">
                <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource 6_Light}"/>
            </Trigger>
            <Trigger Property="IsEnabled" SourceName="toggleButton" Value="False">
                <Setter Property="Foreground" TargetName="contentPresenter" Value="{StaticResource PaleOlive}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ComboBox">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MaxDropDownHeight" Value="520"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
    </Style>


    <Style TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource SlightlyTransparent}"/>
        <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="{StaticResource MenuDropDownFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource 3_MediumDark}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsDummy}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Gold}"/>
                            <Setter Property="Background" Value="{StaticResource 2_Dark}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Gold}"/>
                            <Setter Property="Background" Value="{StaticResource 3_MediumDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Game styles -->
    <Style TargetType="TextBlock" x:Key="GameQuestionText" BasedOn="{StaticResource MenuTextPrimary}">
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="{StaticResource GameQuestionFontSize}"/>
        <Setter Property="Margin" Value="0 0 0 6"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="GameTextSecondary" BasedOn="{StaticResource GameQuestionText}">
        <Setter Property="Foreground" Value="{StaticResource 6_Light}"/>
        <Setter Property="FontSize" Value="{StaticResource GameSecondaryFontSize}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="NextQuestionButton" BasedOn="{StaticResource MenuButton}">
        <Setter Property="Margin" Value="0 6"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Listbox styles -->
    <Style TargetType="ListBox">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="{StaticResource GamePrimaryFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <!-- When SelectionMode is Multiple, moving with the keyboard to another item doesn't select it. Spacebar toggles selection -->
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer Margin="0" Focusable="false">
                        <StackPanel IsItemsHost="True" IsEnabled="{Binding IsNoAnswerSelected}"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 6"/>
        <Setter Property="Padding" Value="2 0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="ItemBorder" Grid.Column="1" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" CornerRadius="20"
                                MaxWidth="{Binding ViewportWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}}">
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Left" Text="{Binding LeftCorrectnessDecorator}" VerticalAlignment="Center" Margin="0 -2 0 0"/>
                                <TextBlock DockPanel.Dock="Right" Text="{Binding RightCorrectnessDecorator}" VerticalAlignment="Center" Margin="0 -2 0 0"/>
                                <TextBlock Text="{Binding Text}" TextAlignment="Center" TextWrapping="Wrap" Margin="0 -2 0 0"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ItemBorder" Property="BorderThickness" Value="3"/>
                            <Setter TargetName="ItemBorder" Property="Margin" Value="0 3"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding IsCorrect}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource WrongAnswer}"/>
                            <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource WrongAnswer}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding IsCorrect}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource CorrectAnswer}"/>
                            <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource CorrectAnswer}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar">
        <Setter Property="Opacity" Value="0.4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Success message styles -->
    <Style TargetType="Border" x:Key="SuccessMessageBorder">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CanCelebrate}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.6" BeginTime="0:0:1.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="SuccessMessageTextBlock">
        <Setter Property="Margin" Value="0 -12 0 0"/>
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="64"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>


    <!-- View Stats styles -->

    <Style TargetType="TextBlock" x:Key="StatsTextBlock" BasedOn="{StaticResource MenuTextPrimary}">
        <Setter Property="Foreground" Value="{StaticResource 7_VeryLight}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="{StaticResource StatsDataFontSize}"/>
        <Setter Property="Margin" Value="0 0 0 2"/>
    </Style>

    <!-- Data grid styles -->
    <Style TargetType="DataGrid">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="EnableColumnVirtualization" Value="False"/>
        <Setter Property="EnableRowVirtualization" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="FontSize" Value="{StaticResource StatsDataFontSize}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AlternatingRowBackground" Value="{StaticResource AlmostTransparent}"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource 2_Dark}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource 2_Dark}"/>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Foreground" Value="{StaticResource 7_VeryLight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource 2_Dark}"/>
        <Setter Property="BorderThickness" Value="1 0 0 0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource 4_Medium}"/>
                <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource 5_MediumLight}"/>
                <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Retemplate Column header because it would reset when changing Background 
    ("this is by design" according to Microsoft,
    see https://developercommunity.visualstudio.com/t/Unable-to-override-default-DataGridColum/10419063 ) -->

    <Style x:Key="ColumnHeaderGripperStyle"
       TargetType="Thumb">
        <Setter Property="Width" Value="6"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="{StaticResource Gold}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="{StaticResource StatsDataFontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:1.5" Value="#0158a254"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.01" Value="#01032303"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-0.95"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="HeaderBorder" BorderThickness="1 0 0 0" Margin="0" Padding="4 0 4 4" BorderBrush="{StaticResource 2_Dark}" Background="{StaticResource ColumnHeaderBackground}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Path Name="SortIcon" Fill="#FFFFFFFF" RenderTransformOrigin=".5,.5" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" Stretch="Uniform" Width="12" Margin="0 2 0 0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter Grid.Row="1" Margin="0 -4 0 0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                
                            </Grid>
                        </Border>

                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab Control with a button in the header -->
    <Style TargetType="TabItem">
        <Setter Property="Foreground" Value="{StaticResource 1_VeryDark}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border x:Name="Border" Margin="0 0 -8 0" Background="{StaticResource 5_MediumLight}" BorderBrush="{StaticResource 2_Dark}" BorderThickness="3 3 3 0" CornerRadius="12 12 0 0" >
                            <ContentPresenter SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="8 2 8 2" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource 3_MediumDark}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource 3_MediumDark}" />
                            <Setter Property="Panel.ZIndex" Value="20" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="10" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource 2_Dark}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource 3_MediumDark}" />
                            <Setter Property="Foreground" Value="{StaticResource 7_VeryLight}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2 2 2 0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="TabControlBackButton" BasedOn="{StaticResource MenuButton}">
        <Setter Property="Margin" Value="8 0"/>
    </Style>
    <Style x:Key="TabControlWithButton" TargetType="TabControl">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource GreenGradient}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" Background="{StaticResource 2_Dark}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TabPanel Margin="5 1 4 0" IsItemsHost="true" KeyboardNavigation.TabIndex="1" Background="{StaticResource 2_Dark}"/>
                            <Button Grid.Column="1" Command="{Binding DataContext.BackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                    Style="{StaticResource TabControlBackButton}" Content="{TemplateBinding Tag}"/>
                        </Grid>
                        <Border Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" 
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" SnapsToDevicePixels="True" 
                                              ContentSource="SelectedContent" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
